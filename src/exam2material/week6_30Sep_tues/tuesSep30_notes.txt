HW 4 due tonight

HW 5 will be posted after class

/////////////////////////

Today:

- Discuss HW 4 problems 6 and 7
- Proving theorems
- Soundness and completeness
- Begin sets

/////////////////////////

HW 4 problem 6

p → q   equivalent to   ¬p ∨ q


p → q  ⊢  ¬p ∨ q


¬p ∨ q   ⊢  p → q


/////////////////////////

HW 4 problem 7

¬(p → q)    equivalent to   p ∧ ¬q


¬(p → q)  ⊢  p ∧ ¬q


p ∧ ¬q   ⊢   ¬(p → q)



/////////////////////////

How do we approach proofs?

1. Write out all the premises
2. Extract all information from premises 
        AND statement - break apart both sides
        IMPLIES statement - see if we have or can get
                        the IF part, then use ImplyE
3. Look at what you are trying to prove (what do we look for in goal/conclusion?)
    A: Top-level operator

    ∧ - try to prove both sides separately, then put them together 

    ∨ - i) Can you get one of the two sides? Use OrI to get conclusion.
        ii) See if you have an OR statement as a premise or 
        a previous claim. If you do, use OrE.
        iii) If nothing else works, try PbC on the whole conclusion.

    → - open ImplyI subproof and assume the IF part and try to get
        to the then part (RHS).

    ¬(something) - Open NegI subproof. Assume "something".
        Goal: F

    just a propositional atom? like p.
    find where it appears in a premise or previous claim. think about 
    what you would need to do to extract it.

    Try OrE if an OR statement is available.

    If nothing works, try PbC. Assume !p, then try to get F.


After each claim - see if there is anything else to
    extract. Scan earlier claims to see if you can put 
    them together with new claims.



Inside a subproof - write down what your goal is.
NEVER open a subproof WITHOUT writing your goal.
    Here's all the one's you need to open a subproof for: OrE, ImplyI, PbC, NegI

    OrE - need to already have an OR statement.
        Your goal in both subproofs is whatever your 
        current goal is when you open those subproofs.

    ImplyI - have to assume the LHS. Goal must be the RHS.

    PbC - assume must be a NOT statement. Goal is F.
        Afterwards must conclude the statement without the not.

    NegI - assume whatever. Goal must be F.
        Afterwards, must conclude the !(assume).


Doesn't fit a pattern or doesn't work out from above?

    OrE, PbC

    If you get stuck in an OrE subproof and can't get to your
    goal, see if you can get F and then use BottomE.


--> when do we open a subproof?





--> can we assume anything in a subproof? 



//////////////////////////////////

Bigger example: big.sc

//////////////////////////////////

A THEOREM in propositional logic is something that is
always true with no need for premises. For example:


Law of the excluded middle. (LEM)

p ∨ ¬p



What would a theorem be in a truth table?
    tautology



Prove LEM (lem.sc):

⊢ ( p ∨ ¬p )               //lem.sc



⊢ (theorem that you are trying to prove)

/////////////////////////////////

SOUNDNESS and COMPLETENESS of natural deduction in
    propositional logic

    "provable": prove using natural deduction
    "true": demonstrate an argument with truth tables


SOUNDNESS: everything that is provable is actually true

p ∧ q 
--------
p


COMPLETENESS: everything that is true is provable





--> what would it mean if a proof system was unsound?

I could prove things that are not true.

This would be bad.




--> what would it mean if a proof system was incomplete?

There would be true (valid) argument that I couldn't prove 
with my proof system.




Propositional logic is both SOUND and COMPLETE.



Using natural deduction to prove the sequent:
    P1, P2, ..., Pn ⊢ q


Is equivalent to using truth tables to show that whenever
    P1, P2, ..., Pn
are true, then q is also true

//////////////////////////////////////

(in-class quiz)

//////////////////////////////////////

Sets.

A set is an unordered collection of elements


{1,1,3,5,7} = {1,3,5,7} = {7,3,1,5}



∈: is in, exists in

    x ∈ A: x exists in set A, x is in A

    x ∉ A: x does not exist in set A, x is not in A



Example: A = {1,4,7,11,20}

    1 ∈ A
    2 ∉ A



- Common sets in math:

    ℕ: natural numbers (positive integers)
        1, 2, 3, ...
    ℤ: All integers (-5, 4, ..., 0, 1, 2, ...)
    ℚ: Rational numbers (rational number means: p/q where p and q are integers
        and q != 0)
    ℝ: real numbers (Numbers with decimals)
    ℂ: Complex numbers (NOT LOOKING AT THIS IN THIS CLASS)
    ∅: Empty set

ℕ ⊂ ℤ ⊂ ℚ ⊂ ℝ ⊂ ℂ

////////////////////////////////////

Set builder notation.

: means, where, such that
| means the same thing

{variable : conditions}


{x: x ∈ ℕ, 5 ≤ x ≤ 10}

{5, 6, 7, 8, 9, 10}



{k : k is a letter in "abracadabra"}

{a, b, r, c, d}




{x : x = 2k,  k ∈ ℕ}

{2, 4, 6, 8, 10, ...}




{n : n = k^2, k ∈ Z}

{0, 1, 4, 9, 16, ...}




{n : n = 3a + 1, a ∈ ℕ, 1 ≤ a ≤ 4}

{ 4, 7, 10, 13}



//////////////////////////////////////

Describe these sets in set builder notation


{5,10,15}



{CIS 115, CIS 200, CIS 300, CIS 301}



{2,4,8,16,32}


///////////////////////////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

///////////////////////////////////////

Set union, ⋃

The union of the sets A and B, written A ⋃ B, is the set
of all elements....?


How could we express in set builder notation?

A ⋃ B =


//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

Set intersection, ⋂

The intersection of the sets A and B, written A ⋂ B, is the set
of all elements that are...?


How could we express in set builder notation?

A ⋂ B =

///////////////////////////////////////

Set difference,

/ or \ (means the same thing)

The difference between the sets A and B, written A - B, is the set
of all elements...?


How could we express in set builder notation?

A - B =

//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

A = {1,3,7,10,11,12}

B = {2,3,4,5,6,7}


Find:

A ⋃ B =

A ⋂ B =

A - B =

B - A =


//////////////////

Subset - A is a subset of B, written A ⊆ B, if
    all elements in A are also in B.

(We say A ⊂ B if A is a subset of B but A ≠ B.)




Example:

A = {1,3,4}

B = {1,3,5,8}

--> is A a subset of B?



A = {8,1,3}

B = {1,3,5,8}

--> is A a subset of B?



//////////////////////////////////

Next time:
- quantifiers
- proofs with sets
- limitations of propositional logic
- intro to predicate logic